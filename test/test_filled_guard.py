# coding: utf-8

"""
    UGC Guard API

    API for UGC Guard. A tool to help you manage reports on user generated content.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ugc_guard_python.models.filled_guard import FilledGuard

class TestFilledGuard(unittest.TestCase):
    """FilledGuard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilledGuard:
        """Test FilledGuard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilledGuard`
        """
        model = FilledGuard()
        if include_optional:
            return FilledGuard(
                guard = ugc_guard_python.models.guard.Guard(
                    id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '', 
                    description = '', 
                    enabled = True, 
                    module_id = '', 
                    type_id = '', 
                    on_fail_action = 'block', ),
                rules = [
                    ugc_guard_python.models.rule.Rule(
                        id = '', 
                        created_at = '', 
                        updated_at = '', 
                        name = '', 
                        description = '', 
                        organization_id = '', 
                        is_deterministic = True, 
                        enabled = True, 
                        deterministic_options_id = '', 
                        non_deterministic_options_id = '', )
                    ],
                rule_connections = [
                    ugc_guard_python.models.guard_rule_connection.GuardRuleConnection(
                        guard_id = '', 
                        rule_id = '', 
                        running_order = 56, )
                    ]
            )
        else:
            return FilledGuard(
                guard = ugc_guard_python.models.guard.Guard(
                    id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '', 
                    description = '', 
                    enabled = True, 
                    module_id = '', 
                    type_id = '', 
                    on_fail_action = 'block', ),
        )
        """

    def testFilledGuard(self):
        """Test FilledGuard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
