# coding: utf-8

"""
    UGC Guard API

    API for UGC Guard. A tool to help you manage reports on user generated content.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ugc_guard_python.models.paginated_result_report_db import PaginatedResultReportDB

class TestPaginatedResultReportDB(unittest.TestCase):
    """PaginatedResultReportDB unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedResultReportDB:
        """Test PaginatedResultReportDB
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedResultReportDB`
        """
        model = PaginatedResultReportDB()
        if include_optional:
            return PaginatedResultReportDB(
                count = 56,
                items = [
                    ugc_guard_python.models.report_db.ReportDB(
                        description = '', 
                        module_id = '', 
                        type_id = '', 
                        id = '', 
                        report_state = 'pending', 
                        main_content_id = '', 
                        reported_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        secret = '', )
                    ]
            )
        else:
            return PaginatedResultReportDB(
                count = 56,
                items = [
                    ugc_guard_python.models.report_db.ReportDB(
                        description = '', 
                        module_id = '', 
                        type_id = '', 
                        id = '', 
                        report_state = 'pending', 
                        main_content_id = '', 
                        reported_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        secret = '', )
                    ],
        )
        """

    def testPaginatedResultReportDB(self):
        """Test PaginatedResultReportDB"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
