# coding: utf-8

"""
    UGC Guard API

    API for UGC Guard. A tool to help you manage reports on user generated content.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ugc_guard_python.models.token_estimation_result import TokenEstimationResult

class TestTokenEstimationResult(unittest.TestCase):
    """TokenEstimationResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenEstimationResult:
        """Test TokenEstimationResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TokenEstimationResult`
        """
        model = TokenEstimationResult()
        if include_optional:
            return TokenEstimationResult(
                input_tokens_estimation = 56,
                estimated_costs = 1.337,
                model = ugc_guard_python.models.ai_model.AiModel(
                    name = '', 
                    enabled = True, 
                    model = '', 
                    description = '', 
                    logo = '', 
                    costs_per_factor_input_tokens = 1.337, 
                    costs_per_factor_output_tokens = 1.337, 
                    factor_tokens = 56, )
            )
        else:
            return TokenEstimationResult(
                input_tokens_estimation = 56,
                estimated_costs = 1.337,
                model = ugc_guard_python.models.ai_model.AiModel(
                    name = '', 
                    enabled = True, 
                    model = '', 
                    description = '', 
                    logo = '', 
                    costs_per_factor_input_tokens = 1.337, 
                    costs_per_factor_output_tokens = 1.337, 
                    factor_tokens = 56, ),
        )
        """

    def testTokenEstimationResult(self):
        """Test TokenEstimationResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
